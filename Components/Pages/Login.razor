<!-- Login.razor -->
@page "/login"
@inject NavigationManager NavManager
@using BisleriumCafe.Data
@* @inherits LoginBase *@



@* <div class="login-body">
    <div class="form-login">
        <form class="text-center" @onsubmit="LoginHandler">
            <img class="mb-4" src="/appicon.png" alt="" height="72">
            <h1 class="h3 mb-3 fw-normal">ENTER YOUR LOGIN DETAILS</h1>
            @if (!_showDefaultCredentials)
            {
                <div class="alert alert-info" role="alert">
                    Username: <strong>@UserService.SeedUsername</strong><br />
                    Password: <strong>@UserService.SeedPassword</strong>
                </div>
            }

            <div class="container form-floating">
                <input type="text" class="form-control username" @bind="_membername" placeholder="Username" />
                <label for="floatingInput">Username</label>
            </div>
            <br />
            <div class="container form-floating mb-3">
                <input type="password" class="form-control password" @bind="_password" placeholder="Password" />
                <label for="floatingPassword">Password</label>
            </div>
            @if (!string.IsNullOrEmpty(_errorMessage))
            {
                <AlertMessage Type="danger" Message="@_errorMessage" />
            }
            <button class="btn btn-dark" type="submit">
                <span class="oi oi-account-login"></span> Login
            </button>
        </form>
    </div>
</div>
 *@

 <div class="container-fluid">
    <div class="row justify-content-center align-items-center min-vh-100">
        <div class="col-md-6 col-lg-4">
            <div class="card shadow">
                <div class="card-body p-4">
                    <form class="text-center" @onsubmit="LoginHandler">
                        <img class="mb-4" src="/appicon.png" alt="" height="72">
                        <h1 class="h3 mb-3 fw-normal"> WELCOME  </h1>

                        <br/>

                        @if (!_showDefaultCredentials)
                        {
                            <div class="alert alert-info" role="alert">
                                Username: <strong>@UserService.SeedUsername</strong><br />
                                Password: <strong>@UserService.SeedPassword</strong>
                            </div>
                        }

                        <div class="form-floating mb-3">
                            <input type="text" class="form-control" @bind="_membername" placeholder="Username">
                            <label for="floatingInput">Username</label>
                        </div>

                        <div class="form-floating mb-3">
                            <input type="password" class="form-control" @bind="_password" placeholder="Password">
                            <label for="floatingPassword">Password</label>
                        </div>

                        @if (!string.IsNullOrEmpty(_errorMessage))
                        {
                            <AlertMessage Type="danger" Message="@_errorMessage" />
                        }

                        <button class="btn btn-dark" type="submit">
                            <span class="oi oi-account-login"></span> Login
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [CascadingParameter]
    private GlobalState _globalState { get; set; }
    private bool _showDefaultCredentials { get; set; }
    private string _membername { get; set; }
    private string _password { get; set; }
    private string _errorMessage = "";

    protected override void OnInitialized()
    {
        try
        {
            var user = UserService.Login(UserService.SeedUsername, UserService.SeedPassword);
            _showDefaultCredentials = user.HasInitialPassword;
        }
        catch { }

        _globalState.ActiveUser = null;
        _errorMessage = "";
    }

    private void LoginHandler()
    {
        try
        {
            _errorMessage = "";
            _globalState.ActiveUser = UserService.Login(_membername, _password);
            if (_globalState.ActiveUser != null)
            {
                NavManager.NavigateTo(_globalState.ActiveUser.HasInitialPassword ? "/Home" : "/");
            }
        }
        catch (Exception e)
        {
            _errorMessage = e.Message;
            Console.WriteLine(e);
        }
    }
}
